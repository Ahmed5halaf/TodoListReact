{"version":3,"sources":["components/DataProvider.js","components/FormInput.js","components/ListItem.js","components/List.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","todos","setTodos","useEffect","todoStore","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","children","FormInput","useContext","todoName","setTodoName","todoInput","useRef","current","focus","autoComplete","onSubmit","e","preventDefault","name","complete","type","id","ref","required","placeholder","onChange","target","toLowerCase","ListItem","todo","chckedComplete","handeleEditeTodos","onEdite","setOnEdite","edittValue","setEditeValue","onClick","handelSave","htmlFor","className","checked","disabled","List","switchComplete","newTodos","forEach","index","map","Footer","checkAll","setCheckAll","newTodosComplete","filter","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3f34b86.chunk.js","sourcesContent":["import React,{ useState, useEffect, createContext } from \"react\";\r\n\r\nexport const DataContext = createContext();\r\n\r\n const DataProvider = (props) => {\r\n\r\n    const [todos,setTodos] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const todoStore = JSON.parse(localStorage.getItem('todoStore'))\r\n        if(todoStore) setTodos(todoStore)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todoStore' , JSON.stringify(todos))\r\n    },[todos])\r\n\r\n\r\n    \r\n    return(\r\n        <DataContext.Provider value={[todos,setTodos]}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\nexport default DataProvider\r\n","import React,{useState,useContext , useEffect , useRef} from \"react\";\r\nimport {DataContext} from './DataProvider'\r\n\r\nfunction FormInput(){\r\n    const [todos,setTodos] = useContext(DataContext);\r\n    const [todoName,setTodoName] = useState('')\r\n    const todoInput = useRef()\r\n\r\n    const addTodo = e => {\r\n        e.preventDefault();\r\n\r\n        setTodos([...todos , {name: todoName , complete: false}])\r\n        setTodoName('')\r\n        todoInput.current.focus(); \r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        todoInput.current.focus(); \r\n    },[])\r\n\r\n    return(\r\n        <form autoComplete='off' onSubmit={addTodo}>\r\n            <input type=\"text\" name='todos' id='todos' ref={todoInput} required placeholder='What To Do Be Done?' value={todoName} onChange={e => setTodoName(e.target.value.toLowerCase())}\r\n            />\r\n            <button type='Submit'>Create</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormInput","import React,{useState} from \"react\";\r\n\r\nfunction ListItem({todo , id , chckedComplete , handeleEditeTodos}){\r\n    const [onEdite , setOnEdite] = useState(false);\r\n    const [edittValue , setEditeValue] = useState(todo.name)\r\n\r\n    const handelOnEdite = () => {\r\n        setOnEdite(true)\r\n    }\r\n\r\n    const handelSave = id => {\r\n        setOnEdite(false)\r\n\r\n        if(edittValue){\r\n            handeleEditeTodos(edittValue , id)\r\n        }else{\r\n            setEditeValue(todo.name)\r\n        }\r\n    }\r\n\r\n    if(onEdite){\r\n        return(\r\n            <li>\r\n                <input type=\"text\" id={edittValue} value={edittValue} name={edittValue}\r\n                onChange={e => setEditeValue(e.target.value.toLowerCase())}\r\n                />\r\n                <button onClick={() => handelSave(id)}>save</button>\r\n            </li>\r\n        )\r\n           \r\n    }else{\r\n\r\n        return(\r\n            <li>\r\n                <label htmlFor={id} className={todo.complete ? \"active\" : \"\"}>\r\n                    <input type=\"checkbox\" id={id} checked={todo.complete} onChange={() => chckedComplete(id)} />\r\n                        {todo.name}\r\n                </label>\r\n                <button disabled={todo.complete} onClick={handelOnEdite}>Edite</button>\r\n            </li>\r\n        )\r\n    }\r\n   \r\n    \r\n}\r\n\r\nexport default ListItem","import React,{useContext} from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport {DataContext} from './DataProvider'\r\n\r\n\r\n\r\nfunction List(){\r\n    const [todos , setTodos] = useContext(DataContext);\r\n\r\n        const switchComplete = id => {\r\n            const newTodos =[...todos]\r\n            newTodos.forEach((todo , index) => {\r\n                if(index === id){\r\n                    todo.complete = !todo.complete \r\n                }\r\n            })\r\n            setTodos(newTodos)\r\n        }\r\n\r\n\r\n        const handeleEditeTodos = (edittValue , id) => {\r\n            const newTodos =[...todos]\r\n\r\n            newTodos.forEach((todo , index) => {\r\n                if(index === id){\r\n                    todo.name = edittValue\r\n                }\r\n            })\r\n            setTodos(newTodos)\r\n        }\r\n        \r\n    return( \r\n        <ul>\r\n            {\r\n            todos.map((todo,index) => (\r\n                <ListItem  todo={todo} key={index} id={index}\r\n                chckedComplete={switchComplete} handeleEditeTodos={handeleEditeTodos} />\r\n            ))\r\n            }\r\n     \r\n      </ul>\r\n    )\r\n}\r\nexport default List","import React,{useState , useContext} from \"react\";\r\nimport { DataContext } from \"./DataProvider\";\r\n\r\n\r\nfunction Footer(){\r\n\r\n    const [checkAll , setCheckAll] = useState(false);\r\n    const [todos , setTodos] = useContext(DataContext)\r\n\r\n    const handleCheckAll = () => {\r\n        const newTodos = [...todos]\r\n        newTodos.forEach(todo => {\r\n            todo.complete = !checkAll\r\n        })\r\n        setTodos(newTodos)\r\n        setCheckAll(!checkAll)\r\n    }\r\n\r\n    const newTodosComplete = () => {\r\n        return todos.filter(todo => todo.complete === false)\r\n    }\r\n    const deltetodo = () => {\r\n        \r\n        setTodos(newTodosComplete())\r\n        setCheckAll(false)\r\n    }\r\n    return(\r\n        <>\r\n        {\r\n            todos.length === 0 ? <h2>No Show More</h2>\r\n            : <div className='row'>\r\n            <label htmlFor=\"all\">\r\n            <input type='checkbox' name='all' id='all' onChange={handleCheckAll} checked={checkAll}/>\r\n            All\r\n            </label>\r\n            <p>You have {newTodosComplete().length} to do</p>\r\n            <button id='delete' onClick={deltetodo}>Delete</button>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n","import React from 'react';\nimport FormInput from './components/FormInput';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport DataProvider from './components/DataProvider';\n\nfunction App() {\n  return (\n    \n    <DataProvider>\n      <div className=\"App\">\n          <h1>To Do List</h1>\n          <FormInput />\n          <List />\n          <Footer />\n      </div>\n      </DataProvider>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}